```
IV1201
├─ backend
│  ├─ eslint.config.js
│  ├─ jest.config.js
│  ├─ package-lock.json
│  ├─ package.json
│  ├─ Procfile
├─ src/
│ ├─ app.ts                         # Main application entry point
│ ├─ controllers/                   # Controllers for handling routes
│ │ ├─ accountController.ts         # Handles account-related logic
│ │ ├─ adminController.ts           # Handles admin-related logic
│ │ └─ profileController.ts         # Handles profile-related logic
│ ├─ middleware/                    # Middleware for authentication and validation
│ │ ├─ authMiddleware.ts            # Authentication middleware
│ │ └─ serverSideValidation.ts      # Server-side validation
│ ├─ models/                        # Database models
│ │ ├─ accountModel.ts              # Model for account data
│ │ ├─ applicationModel.ts          # Model for application data
│ │ ├─ availabilityModel.ts         # Model for availability data
│ │ └─ competenceModel.ts           # Model for competence data
│ ├─ routes/                        # API routes
│ │ ├─ accountRoutes.ts             # Routes for account-related endpoints
│ │ ├─ adminRoutes.ts               # Routes for admin-related endpoints
│ │ └─ profileRoutes.ts             # Routes for profile-related endpoints
│ ├─ services/                      # Business logic services
│ │ ├─ accountService.ts            # Service for account-related logic
│ │ ├─ adminService.ts              # Service for admin-related logic
│ │ └─ profileService.ts            # Service for profile-related logic
│ └─ utils/                         # Utility functions
│ ├─ db.ts                          # Database connection utility
│ ├─ email.ts                       # Email utility for password reset
│ ├─ logger.ts                      # Logging utility
│ └─ validation.ts                  # Validation utility
├─ jest.config.js                   # Jest configuration for testing
├─ package.json                     # Backend dependencies and scripts
├─ Procfile                         # Heroku deployment configuration
└─ tsconfig.json                    # TypeScript configuration
├─ db.txt
├─ frontend
│  ├─ .babelrc
│  ├─ eslint.config.js
│  ├─ index.html
│  ├─ jest.config.cjs
│  ├─ jest.setup.js
│  ├─ package-lock.json
│  ├─ package.json
│  ├─ Procfile                     # Heroku deployment configuration
│  ├─ public
│  │  └─ vite.svg
│  ├─ README.md
│  ├─ src
│  │  ├─ App.tsx                    # Main application 
│  │  ├─ assets                     # Static assets like images and videos 
│  │  │  ├─ 125183-732837197_small.mp4
│  │  │  ├─ ferriswheel.mp4
│  │  │  ├─ react.svg
│  │  │  └─ rollercoaster.mp4
│  │  ├─ components
│  │  │  ├─ AccountInfoForm.tsx     # Form for updating account information
│  │  │  ├─ ApplicationForm.tsx     # Form for creating an application
│  │  │  ├─ ApplicationsList.tsx    # List of applications  
│  │  │  ├─ AvailabilityForm.tsx    # Form for updating availability
│  │  │  ├─ ErrorBoundry.tsx        # Error boundary component
│  │  │  ├─ LoginForm.tsx           # Form for logging in
│  │  │  ├─ Navbar.tsx              # Navigation bar
│  │  │  ├─ PasswordEmailResetForm.tsx      # Form for resetting password by email
│  │  │  ├─ PasswordResetForm.tsx           # Form for resetting password
│  │  │  ├─ SignupForm.tsx          # Form for signing up
│  │  │  └─ UserCompetences.tsx     # List of user competences
│  │  ├─ context 
│  │  │  ├─ AvailabilityContext.test.tsx #unit test for AvailabilityContext
│  │  │  ├─ AvailabilityContext.tsx      #Context for availability
│  │  │  ├─ ProfileContext.test.tsx      #unit test for ProfileContext and competences 
│  │  │  ├─ ProfileContext.tsx           #Context for profile and competences   
│  │  │  ├─ UserContext.test.tsx         #unit test for UserContext
│  │  │  └─ UserContext.tsx              #Context for user login and signup
│  │  ├─ hooks                       # Custom hooks for fetching data
│  │  │  ├─ useApplications.ts       # Hook for fetching applications
│  │  │  ├─ useApply.ts              # Hook for applying for a job
│  │  │  ├─ useAuthFetch.ts          # Hook for fetching data with authentication 
│  │  │  ├─ useAvailiblity.ts        # Hook for fetching availability
│  │  │  ├─ useLogin.ts              # Hook for logging in
│  │  │  ├─ usePasswordReset.ts      # Hook for resetting password
│  │  │  ├─ useProfile.ts            # Hook for fetching profile
│  │  │  ├─ useSignup.ts             # Hook for signing up
│  │  │  └─ useValidation.ts         # Hook for form validation
│  │  ├─ main.tsx                    # Main application entry point  
│  │  ├─ pages                       # Pages for the application
│  │  │  ├─ ApplyForJob.tsx          # Page for applying for a job
│  │  │  ├─ Home.tsx                 # Home page
│  │  │  ├─ Login.tsx                # Page for logging in
│  │  │  ├─ NotFound.tsx             # Page for 404 errors
│  │  │  ├─ profile.tsx              # Page for viewing and updating profile
│  │  │  ├─ ResetPassword.tsx        # Page for resetting password
│  │  │  └─ Signup.tsx               # Page for signing up
│  │  ├─ styles                      # Styles for the application                
│  │  │  ├─ App.css
│  │  │  ├─ PickersDayStyles.ts
│  │  │  └─ video.css
│  │  ├─ utils                       # Utility functions
│  │  │  ├─ auth.ts                  # Authentication utility
│  │  │  ├─ competenceOptions.ts     # Options for competences
│  │  │  ├─ error.ts                 # Error utility
│  │  │  └─ signup.ts                # Signup utility
│  │  └─ vite-env.d.ts
│  ├─ tsconfig.app.json             # TypeScript configuration for the application
│  ├─ tsconfig.json                 # TypeScript configuration
│  ├─ tsconfig.node.json 
│  └─ vite.config.ts
├─ mod.sql
├─ package-lock.json
├─ ProjectTree
└─ README.md

```