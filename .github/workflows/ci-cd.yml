name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - pipeline
  pull_request:
    branches:
      - main
      - pipeline

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Debug Show Directory Structure
        run: ls -la

      - name: Debug Show Contents of Frontend Folder
        run: ls -la frontend

      - name: Install Dependencies
        run: npm ci
        working-directory: frontend

  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Debug Show Directory Structure
        run: ls -la

      - name: Debug Show Contents of Backend Folder
        run: ls -la backend

      - name: Install Dependencies
        run: npm ci
        working-directory: backend

      # Set environment variables using GitHub Secrets
      - name: Set Environment Variables
        run: |
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
          echo "GMAIL=${{ secrets.GMAIL }}" >> backend/.env
          echo "GMAIL_SECRET=${{ secrets.GMAIL_SECRET }}" >> backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env
        working-directory: backend

      - name: Run Backend Tests
        run: npm test
        working-directory: backend
